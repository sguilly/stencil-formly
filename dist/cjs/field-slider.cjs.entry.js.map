{"file":"field-slider.entry.cjs.js","mappings":";;;;;;;MASa,WAAW;;;;;oBAEH,KAAK;2BACO,EAAE;;EASjC,MAAM,iBAAiB;IACrB,IAAI,QAAQ,GAAG,EAAE,CAAC;IAElB,QAAQ,CAAC,IAAI,CAACA,kBAAO,CAAC,6EAA6E,CAAC,CAAC,CAAC;IAEtG,QAAQ,CAAC,IAAI,CAACC,qBAAU,CAAC,4EAA4E,CAAC,CAAC,CAAC;IAExG,QAAQ,CAAC,IAAI,CAACA,qBAAU,CAAC,iEAAiE,CAAC,CAAC,CAAC;IAE7F,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;GAC9B;EAED,MAAM,mBAAmB;;IACvB,IAAI,CAAC,eAAe,GAAG,CAAA,MAAA,IAAI,CAAC,eAAe,0CAAE,QAAQ,KAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;GAC9E;EAED,kBAAkB;IAChB,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAClC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;MAClB,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE;QAC/C,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE;QACnC,IAAI,EAAE,EAAE;QACR,QAAQ,EAAE,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;QAClC,OAAO,EAAE,OAAO;QAChB,KAAK,EAAE;UACL,GAAG,EAAE,CAAC;UACN,GAAG,EAAE,GAAG;SACT;OACF,CAAC,CAAC;MAEH,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,EAAE;QACtB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC;QACzC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;OAC/C,CAAC,CAAC;KACJ;IAED,IAAI,IAAI,CAAC,KAAK,EAAE;MACd,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC/B;GACF;EAED,WAAW;IACT,OAAOC,iBAAK,GAAG,EAAE,EAAE,KAAK,IAAI,CAAC,QAAQ,GAAG,EAAiB,CAAC,GAAQ,CAAC;GACpE;EAED,MAAM;IACJ,QACEA,6BAAiB,eAAe,EAAE,IAAI,CAAC,eAAe,EAAE,eAAe,EAAE,IAAI,CAAC,eAAe,IAC1F,IAAI,CAAC,WAAW,EAAE,CACH,EAClB;GACH;;;;;","names":["loadCss","loadScript","h"],"sources":["./src/components/dynamic-form/fields/field-slider.tsx"],"sourcesContent":["import { Component, h, State, Prop, Event, EventEmitter } from '@stencil/core';\n\nimport { loadScript, loadCss, loadModule, loadNoModule } from '../../../utils/loadScript';\n\ndeclare var noUiSlider: any;\ndeclare var wNumb: any;\n@Component({\n  tag: 'field-slider',\n})\nexport class FieldSlider {\n  @Prop() value: any;\n  @Prop() disabled = false;\n  @Prop() templateOptions: any = {};\n\n  @Event() customChange: EventEmitter<any>;\n\n  refInput;\n  instance;\n\n  displayRequired;\n\n  async componentWillLoad() {\n    let promises = [];\n\n    promises.push(loadCss('https://cdnjs.cloudflare.com/ajax/libs/noUiSlider/15.5.1/nouislider.min.css'));\n\n    promises.push(loadScript('https://cdnjs.cloudflare.com/ajax/libs/noUiSlider/15.5.1/nouislider.min.js'));\n\n    promises.push(loadScript('https://cdnjs.cloudflare.com/ajax/libs/wnumb/1.2.0/wNumb.min.js'));\n\n    return Promise.all(promises);\n  }\n\n  async componentWillRender() {\n    this.displayRequired = this.templateOptions?.required == true && !this.value;\n  }\n\n  componentDidRender() {\n    console.log('ref', this.refInput);\n    if (!this.instance) {\n      this.instance = noUiSlider.create(this.refInput, {\n        start: this.value ? this.value : 50,\n        step: 10,\n        tooltips: [wNumb({ decimals: 0 })],\n        connect: 'lower',\n        range: {\n          min: 0,\n          max: 100,\n        },\n      });\n\n      this.instance.on('end', () => {\n        this.value = Number(this.instance.get());\n        this.customChange.emit({ value: this.value });\n      });\n    }\n\n    if (this.value) {\n      this.instance.set(this.value);\n    }\n  }\n\n  renderInput() {\n    return <div ref={el => (this.refInput = el as HTMLElement)}></div>;\n  }\n\n  render() {\n    return (\n      <field-container templateOptions={this.templateOptions} displayRequired={this.displayRequired}>\n        {this.renderInput()}\n      </field-container>\n    );\n  }\n}\n"],"version":3}