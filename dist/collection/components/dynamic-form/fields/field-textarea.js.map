{"version":3,"file":"field-textarea.js","sourceRoot":"","sources":["../../../../src/components/dynamic-form/fields/field-textarea.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAS,IAAI,EAAE,KAAK,EAAgB,MAAM,eAAe,CAAC;AAC/E,OAAO,EAAE,aAAa,EAAE,MAAM,uBAAuB,CAAC;AAKtD,MAAM,OAAO,UAAU;;;oBAEF,KAAK;2BACO,EAAE;;EAOjC,WAAW;;IACT,OAAO,CACL,gBACE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,KAAK,EAAE,WAAW,GAAG,CAAC,CAAA,MAAA,MAAA,MAAA,IAAI,CAAC,UAAU,0CAAE,KAAK,0CAAE,OAAO,0CAAE,SAAS,KAAI,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,CAAC,EACjI,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,OAAO,EAAE,CAAC,EAAO,EAAE,EAAE;QACnB,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC7B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;MACrD,CAAC,GACS,CACb,CAAC;EACJ,CAAC;EAED,KAAK,CAAC,mBAAmB;;IACvB,IAAI,CAAC,UAAU,GAAG,aAAa,EAAE,CAAA;IACjC,IAAI,CAAC,eAAe,GAAG,CAAA,MAAA,IAAI,CAAC,eAAe,0CAAE,QAAQ,KAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;EAC/E,CAAC;EAED,MAAM;IACJ,OAAO,CACL,uBAAiB,eAAe,EAAE,IAAI,CAAC,eAAe,EAAE,eAAe,EAAE,IAAI,CAAC,eAAe,IAC1F,IAAI,CAAC,WAAW,EAAE,CACH,CACnB,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, h, State, Prop, Event, EventEmitter } from '@stencil/core';\nimport { getClassNames } from '../../../styles/style';\n\n@Component({\n  tag: 'field-textarea',\n})\nexport class FieldInput {\n  @Prop() value: any;\n  @Prop() disabled = false;\n  @Prop() templateOptions: any = {};\n\n  @Event() customChange: EventEmitter<any>;\n\n  displayRequired;\n  classNames\n\n  renderInput() {\n    return (\n      <textarea\n        disabled={this.disabled}\n        class={'textarea ' + (this.classNames?.group?.control?.className || '') + (this.displayRequired == true ? ' df-is-required' : '')} \n        value={this.value}\n        onInput={(ev: any) => {\n          console.log(ev.target.value);\n          this.customChange.emit({ value: ev.target.value });\n        }}\n      ></textarea>\n    );\n  }\n\n  async componentWillRender() {\n    this.classNames = getClassNames()\n    this.displayRequired = this.templateOptions?.required == true && !this.value;\n  }\n\n  render() {\n    return (\n      <field-container templateOptions={this.templateOptions} displayRequired={this.displayRequired}>\n        {this.renderInput()}\n      </field-container>\n    );\n  }\n}\n"]}