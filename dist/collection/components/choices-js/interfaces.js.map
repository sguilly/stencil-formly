{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../../src/components/choices-js/interfaces.tsx"],"names":[],"mappings":"","sourcesContent":["/**\n * @link https://github.com/jshjohnson/Choices#classnames\n */\nexport type ClassNames = {\n  containerOuter?: string;\n  containerInner?: string;\n  input?: string;\n  inputCloned?: string;\n  list?: string;\n  listItems?: string;\n  listSingle?: string;\n  listDropdown?: string;\n  item?: string;\n  itemSelectable?: string;\n  itemDisabled?: string;\n  itemChoice?: string;\n  placeholder?: string;\n  group?: string;\n  groupHeading?: string;\n  button?: string;\n  activeState?: string;\n  focusState?: string;\n  openState?: string;\n  disabledState?: string;\n  highlightedState?: string;\n  selectedState: string;\n  flippedState?: string;\n  loadingState?: string;\n  noResults?: string;\n  noChoices?: string;\n};\n\n/**\n * @link https://github.com/krisk/Fuse/blob/v3.6.1/src/typings.d.ts#L51\n */\nexport type WeightedField = {\n  [key: string]: any;\n  weight: number;\n};\n\n/**\n * @version 3.6.1\n * @link https://github.com/krisk/Fuse/blob/v3.6.1/src/typings.d.ts#L43\n */\nexport type FuseOptions = {\n  id?: string;\n  caseSensitive?: boolean;\n  includeMatches?: boolean;\n  includeScore?: boolean;\n  shouldSort?: boolean;\n  keys?: Array<string> | Array<object> | Array<WeightedField>;\n  verbose?: boolean;\n  tokenize?: boolean;\n  tokenSeparator?: RegExp;\n  matchAllTokens?: boolean;\n  location?: number;\n  distance?: number;\n  threshold?: number;\n  maxPatternLength?: number;\n  minMatchCharLength?: number;\n  findAllMatches?: boolean;\n  sortFn?(a: { score: number }, b: { score: number }): number;\n  getFn?(obj: any, path: string): any;\n};\n\n/**\n * @link https://github.com/jshjohnson/Choices#addItemFilter\n */\nexport type ItemFilterFn = (value: string) => boolean;\n\n/**\n * @link https://github.com/jshjohnson/Choices#noresultstext\n */\nexport type NoResultsTextFn = () => string;\n\n/**\n * @link https://github.com/jshjohnson/Choices#nochoicestext\n */\nexport type NoChoicesTextFn = () => string;\n\n/**\n * @link https://github.com/jshjohnson/Choices#additemtext\n */\nexport type AddItemTextFn = ((value: string) => string) | string;\n\n/**\n * @link https://github.com/jshjohnson/Choices#maxitemtext\n */\nexport type MaxItemTextFn = (maxItemCount: number) => string;\n\n/**\n * @link https://github.com/jshjohnson/Choices#sortfilter\n */\nexport type SortFn = (el1: any, el2: any) => number;\n\nexport type UniqueItemText = ((value: string) => string) | string;\nexport type CustomAddItemText = ((value: string) => string) | string;\n/**\n * @link https://github.com/jshjohnson/Choices#callbackoninit\n */\nexport type OnInit = () => void;\n\n/**\n * @link https://github.com/jshjohnson/Choices#callbackoncreatetemplates\n */\nexport type OnCreateTemplates = (template) => any;\n\n/**\n * @link https://github.com/jshjohnson/Choices#valuecomparer\n */\nexport type ValueCompareFunction = (value1: string, value2: string) => boolean;\n\n/**\n * @link https://github.com/jshjohnson/Choices#configuration-options\n */\nexport interface IChoicesProps {\n  silent?: boolean;\n  items?: Array<any>;\n  choices?: Array<any>;\n  renderChoiceLimit?: number;\n  maxItemCount?: number;\n  addItems?: boolean;\n  addItemFilter?: string | RegExp | ItemFilterFn | null;\n  addItemText?: string | AddItemTextFn;\n  removeItems?: boolean;\n  removeItemButton?: boolean;\n  editItems?: boolean;\n  duplicateItemsAllowed?: boolean;\n  delimiter?: string;\n  paste?: boolean;\n  searchEnabled?: boolean;\n  searchChoices?: boolean;\n  searchFloor?: number;\n  searchResultLimit?: number;\n  searchFields?: Array<any> | string;\n  position?: 'auto' | 'top' | 'bottom';\n  resetScrollPosition?: boolean;\n  shouldSort?: boolean;\n  shouldSortItems?: boolean;\n  sorter: SortFn;\n  placeholder?: boolean | string;\n  placeholderValue?: string | null;\n  searchPlaceholderValue?: string | null;\n  prependValue?: string | null;\n  appendValue?: string | null;\n  renderSelectedChoices?: 'always' | 'auto';\n  loadingText?: string;\n  noResultsText?: string | NoResultsTextFn;\n  noChoicesText?: string | NoChoicesTextFn;\n  itemSelectText?: string;\n  maxItemText?: string | MaxItemTextFn;\n  uniqueItemText: UniqueItemText;\n  customAddItemText?: CustomAddItemText;\n  valueComparer?: ValueCompareFunction;\n  classNames?: ClassNames;\n  fuseOptions?: FuseOptions;\n  callbackOnInit?: OnInit;\n  callbackOnCreateTemplates?: OnCreateTemplates;\n  \n}\n\n/**\n * @link https://github.com/jshjohnson/Choices#ajaxfn\n */\nexport type AjaxFn = (callback) => void;\n\n/**\n * @link https://github.com/jshjohnson/Choices#methods\n */\nexport interface IChoicesMethods {\n  highlightItem(item: Element, runEvent?: boolean);\n  unhighlightItem(item: Element);\n  highlightAll();\n  unhighlightAll();\n  removeActiveItemsByValue(value);\n  removeActiveItems(excludedId);\n  removeHighlightedItems();\n  showDropdown();\n  hideDropdown();\n  setChoices(choices, value, label, replaceChoices);\n  clearChoices();\n  getValue(valueOnly);\n  setValue(args);\n  setChoiceByValue(value: string | Array<string>);\n  clearStore();\n  clearInput();\n  disable();\n  enable();\n}\n"]}