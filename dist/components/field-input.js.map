{"file":"field-input.js","mappings":";;;MAMaA,YAAU;;;;;;oBAEF,KAAK;2BACO,EAAE;;EAOjC,WAAW;;IACT,QACE,aACE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,KAAK,EAAE,CAAC,CAAA,MAAA,MAAA,MAAA,IAAI,CAAC,UAAU,0CAAE,KAAK,0CAAE,OAAO,0CAAE,SAAS,KAAI,EAAE,KAAK,IAAI,CAAC,eAAe,IAAI,IAAI,GAAG,iBAAiB,GAAG,EAAE,CAAC,EACnH,WAAW,EAAC,YAAY,EACxB,IAAI,EAAE,CAAA,MAAA,IAAI,CAAC,eAAe,0CAAE,IAAI,KAAI,MAAM,EAC1C,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,OAAO,EAAE,CAAC,EAAO;QACf,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC7B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;OACpD,GACM,EACT;GACH;EAED,MAAM,mBAAmB;;IACvB,IAAI,CAAC,UAAU,GAAG,aAAa,EAAE,CAAA;IACjC,IAAI,CAAC,eAAe,GAAG,CAAA,MAAA,IAAI,CAAC,eAAe,0CAAE,QAAQ,KAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;GAC9E;EAED,MAAM;IACJ,QACE,uBAAiB,eAAe,EAAE,IAAI,CAAC,eAAe,EAAE,eAAe,EAAE,IAAI,CAAC,eAAe,IAC1F,IAAI,CAAC,WAAW,EAAE,CACH,EAClB;GACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["FieldInput"],"sources":["./src/components/dynamic-form/fields/field-input.tsx"],"sourcesContent":["import { Component, h, State, Prop, Event, EventEmitter } from '@stencil/core';\nimport { getClassNames } from '../../../styles/style';\n\n@Component({\n  tag: 'field-input',\n})\nexport class FieldInput {\n  @Prop() value: any;\n  @Prop() disabled = false;\n  @Prop() templateOptions: any = {};\n\n  @Event() customChange: EventEmitter<any>;\n\n  displayRequired;\n  classNames\n\n  renderInput() {\n    return (\n      <input\n        disabled={this.disabled}\n        class={(this.classNames?.group?.control?.className || '') + (this.displayRequired == true ? ' df-is-required' : '')}\n        placeholder=\"Text input\"\n        type={this.templateOptions?.type || 'text'}\n        value={this.value}\n        onInput={(ev: any) => {\n          console.log(ev.target.value);\n          this.customChange.emit({ value: ev.target.value });\n        }}\n      ></input>\n    );\n  }\n\n  async componentWillRender() {\n    this.classNames = getClassNames()\n    this.displayRequired = this.templateOptions?.required == true && !this.value;\n  }\n\n  render() {\n    return (\n      <field-container templateOptions={this.templateOptions} displayRequired={this.displayRequired}>\n        {this.renderInput()}\n      </field-container>\n    );\n  }\n}\n"],"version":3}