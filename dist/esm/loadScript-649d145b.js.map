{"file":"loadScript-649d145b.js","mappings":"AAAA,IAAI,UAAU,GAAG,EAAE,CAAA;AAEnB,SAAS,SAAS,CAAC,QAAQ;EACvB,IAAI,UAAU,CAAC,OAAO,CAAC,GAAG,GAAG,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE;IAEhD,OAAO,KAAK,CAAA;GACf;;;IAGG,OAAO,IAAI,CAAA;AACnB,CAAC;AAED,SAAS,OAAO,CAAC,QAAQ;EACrB,UAAU,IAAI,GAAG,GAAG,QAAQ,GAAG,GAAG,CAAA;AACtC,CAAC;SAGe,UAAU,CAAC,GAAQ,EAAE,OAAa;EAE9C,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO;IAEvB,IAAI,SAAS,CAAC,GAAG,CAAC,EAAE;MAChB,OAAO,CAAC,IAAI,CAAC,CAAA;KAChB;SACI;MACD,IAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAA;MAC7C,MAAM,CAAC,IAAI,GAAG,iBAAiB,CAAC;MAEhC,MAAM,CAAC,MAAM,GAAG;;QAGZ,OAAO,CAAC,GAAG,CAAC,CAAA;QACZ,OAAO,CAAC,IAAI,CAAC,CAAA;OAChB,CAAA;MAED,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;MAEjB,IAAG,OAAO,EACV;QACI,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAA;OAC9B;WAAI;QACD,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;OAChE;KAEJ;GACJ,CAAC,CAAA;AACN,CAAC;SAEe,UAAU,CAAC,GAAQ,EAAE,OAAa;EAE9C,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO;IAEvB,IAAI,SAAS,CAAC,GAAG,CAAC,EAAE;MAChB,OAAO,CAAC,IAAI,CAAC,CAAA;KAChB;SACI;MACD,IAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAA;MAC7C,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC;MAEvB,MAAM,CAAC,MAAM,GAAG;;QAGZ,OAAO,CAAC,GAAG,CAAC,CAAA;QACZ,OAAO,CAAC,IAAI,CAAC,CAAA;OAChB,CAAA;MAED,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;MAEjB,IAAG,OAAO,EACV;QACI,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAA;OAC9B;WAAI;QACD,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;OAChE;KAEJ;GACJ,CAAC,CAAA;AACN,CAAC;SAmCe,OAAO,CAAC,GAAQ,EAAE,OAAa;EAE3C,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO;IAEvB,IAAI,SAAS,CAAC,GAAG,CAAC,EAAE;MAChB,OAAO,CAAC,IAAI,CAAC,CAAA;KAChB;SACI;MAED,IAAI,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAA;MACzC,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;MACvB,IAAI,CAAC,GAAG,GAAG,YAAY,CAAA;MAEvB,IAAI,CAAC,MAAM,GAAG;;QAGV,OAAO,CAAC,GAAG,CAAC,CAAA;QACZ,OAAO,CAAC,IAAI,CAAC,CAAA;OAChB,CAAA;MAED,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;MAEhB,IAAG,OAAO,EACV;QACI,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAA;OAC5B;WAAI;QACD,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;OAC9D;KACJ;GACJ,CAAC,CAAA;AACN;;;;","names":[],"sources":["./src/utils/loadScript.ts"],"sourcesContent":["var filesadded = \"\" //list of files already added\n\nfunction checkFile(filename) {\n    if (filesadded.indexOf(\"[\" + filename + \"]\") == -1) {\n        \n        return false\n    }\n    else\n    //console.log('lib ' + filename + ' already load')\n        return true\n}\n\nfunction addFile(filename) {\n    filesadded += \"[\" + filename + \"]\" //List of files added in the form \"[filename1],[filename2],etc\"\n}\n\n\nexport function loadScript(url: any, element?: any) {\n\n    return new Promise((resolve) => {\n\n        if (checkFile(url)) {\n            resolve(null)\n        }\n        else {\n            var script = document.createElement(\"script\")\n            script.type = \"text/javascript\";\n\n            script.onload = () => {\n\n                //console.log('load Script done :'+url)\n                addFile(url)\n                resolve(null)\n            }\n\n            script.src = url;\n\n            if(element)\n            {\n                element.appendChild(script)\n            }else{\n                document.getElementsByTagName(\"head\")[0].appendChild(script);\n            }\n            \n        }\n    })\n}\n\nexport function loadModule(url: any, element?: any) {\n\n    return new Promise((resolve) => {\n\n        if (checkFile(url)) {\n            resolve(null)\n        }\n        else {\n            var script = document.createElement(\"script\")\n            script.type = \"module\";\n\n            script.onload = () => {\n\n                //console.log('load Module done :'+url)\n                addFile(url)\n                resolve(null)\n            }\n\n            script.src = url;\n\n            if(element)\n            {\n                element.appendChild(script)\n            }else{\n                document.getElementsByTagName(\"head\")[0].appendChild(script);\n            }\n            \n        }\n    })\n}\n\nexport function loadNoModule(url: any, element?: any) {\n\n    return new Promise((resolve) => {\n\n        if (checkFile(url)) {\n            resolve(null)\n        }\n        else {\n            var script = document.createElement(\"script\")\n            script.noModule = true\n\n            resolve(null)\n\n            // script.onload = () => {\n\n            //     //console.log('load NoModule done :'+url)\n            //     addFile(url)\n            //     resolve(null)\n            // }\n\n            script.src = url;\n\n            if(element)\n            {\n                element.appendChild(script)\n            }else{\n                document.getElementsByTagName(\"head\")[0].appendChild(script);\n            }\n            \n        }\n    })\n}\n\nexport function loadCss(url: any, element?: any) {\n\n    return new Promise((resolve) => {\n\n        if (checkFile(url)) {\n            resolve(null)\n        }\n        else {\n\n            var link = document.createElement(\"link\")\n            link.type = \"text/css\";\n            link.rel = \"stylesheet\"\n\n            link.onload = () => {\n\n                //console.log('load done')\n                addFile(url)\n                resolve(null)\n            }\n\n            link.href = url;\n\n            if(element)\n            {\n                element.appendChild(link)\n            }else{\n                document.getElementsByTagName(\"head\")[0].appendChild(link);\n            }\n        }\n    })\n}\n"],"version":3}